# start the install
sudo apt-get install snort
# since the version in apt is old, let's compile our own
# install prereqs
sudo apt-get install flex bison libpcap-dev libdnet-dev
# get the source:
wget http://sourceforge.net/projects/snort/files/snort/daq-2.0.2.tar.gz
wget http://sourceforge.net/projects/snort/files/snort/snort-2.9.6.0.tar.gz
# get the pre-reqs
sudo apt-get install flex bison libdnet-dev libdumbnet-dev libpcap0.8-dev
# extract the source
elatov@kerch:/opt/work$tar xvzf daq-2.0.2.tar.gz
# prepare the source
elatov@kerch:/opt/work/daq-2.0.2$./configure --prefix=/usr/local/snort
# then compile the software
make
# then install the software
sudo mkdir /usr/local/snort
sudo chown elatov:elatov /usr/local/snort
make install
# now let's compile snort
elatov@kerch:/opt/work$tar xvzf snort-2.9.6.0.tar.gz
# let's configure the software
./configure --prefix=/usr/local/snort --with-daq-includes=/usr/local/snort/include --with-daq-libraries=/usr/local/snort/lib --enable-sourcefire
# compile and install the software
make && make install
# then copy the configurations over
rsync -avzP /opt/work/snort-2.9.6.0/etc/*.conf* /usr/local/snort/etc/.
rsync -avzP /opt/work/snort-2.9.6.0/etc/*.map /usr/local/snort/etc/.
# modify the configs
vi /usr/local/snort/etc/snort.conf
===
ipvar HOME_NET 192.168.0.0/16,10.0.0.0/8
ipvar EXTERNAL_NET !HOME_NET
var RULE_PATH ./rules
var WHITE_LIST_PATH ./rules
var BLACK_LIST_PATH ./rules
output unified2: filename merged.log, limit 128, mpls_event_types, vlan_event_types
config logdir: /usr/local/snort/var/log
dynamicpreprocessor directory /usr/local/snort/lib/snort_dynamicpreprocessor/
dynamicengine /usr/local/snort/lib/snort_dynamicengine/libsf_engine.so
dynamicdetection directory /usr/local/snort/lib/snort_dynamicrules
# comment out the specific rules, lines 547 to 661
#include $RULE_PATH/app-detect.rules
#include $RULE_PATH/attack-responses.rules
#include $RULE_PATH/backdoor.rules
...
...
# or just run this
sed -i '/^include $RULE_PATH/d' /usr/local/snort/etc/snort.conf
===
# add the user and group
sudo groupadd snort
sudo useradd -g snort snort
# prepare the rest of the directories
mkdir /usr/local/snort/etc/rules
mkdir /usr/local/snort/lib/snort_dynamicrules
/usr/local/snort/etc/rules/iplists
mkdir -p /usr/local/snort/var/log
touch /usr/local/snort/etc/rules/local.rules
touch /usr/local/snort/etc/rules/white_list.rules
touch /usr/local/snort/etc/rules/black_list.rules

### Let's get the rules with pulled-pork
# first let's install the pre-requisites
sudo apt-get install  libcrypt-ssleay-perl liblwp-protocol-https-perl
# then get the source
svn checkout http://pulledpork.googlecode.com/svn/trunk/ pulledpork-read-only
mkdir /usr/local/pp
sudo chown elatov:elatov /usr/local/pp
mkdir /usr/local/pp/etc
mkdir /usr/local/pp/bin
# now let's copy the necessary files
rsync -avzP pulledpork-read-only/etc/.  /usr/local/pp/etc/.
rsync -avzP pulledpork-read-only/pulledpork.pl /usr/local/pp/bin/.
# now let's modify the configuration
## here is the configurations I ended up with
elatov@kerch:~$grep -Ev '^$|^#' /usr/local/pp/etc/pulledpork.conf
rule_url=https://www.snort.org/reg-rules/|snortrules-snapshot.tar.gz|46b1a77f08ffe026dff9485a756e9306fce301ba
rule_url=https://s3.amazonaws.com/snort-org/www/rules/community/|community-rules.tar.gz|Community
rule_url=http://labs.snort.org/feeds/ip-filter.blf|IPBLACKLIST|46b1a77f08ffe026dff9485a756e9306fce301ba
ignore=deleted.rules,experimental.rules,local.rules
temp_path=/tmp
rule_path=/usr/local/snort/etc/rules/snort.rules
local_rules=/usr/local/snort/etc/rules/local.rules
sid_msg=/usr/local/snort/etc/sid-msg.map
sid_msg_version=1
sid_changelog=/usr/local/snort/var/log/sid_changes.log
sorule_path=/usr/local/snort/lib/snort_dynamicrules
snort_path=/usr/local/snort/bin/snort
config_path=/usr/local/snort/etc/snort.conf
distro=Debian-6-0
black_list=/usr/local/snort/etc/rules/iplists/default.blacklist
IPRVersion=/usr/local/snort/etc/rules/iplists
version=0.7.0
===
# now try to get the rules
elatov@kerch:~$/usr/local/pp/bin/pulledpork.pl -c /usr/local/pp/etc/pulledpork.conf -l
    http://code.google.com/p/pulledpork/
      _____ ____
     `----,\    )
      `--==\\  /    PulledPork v0.7.0 - Swine Flu!
       `--==\\/
     .-~~~~-.Y|\\_  Copyright (C) 2009-2013 JJ Cummings
  @_/        /  66\_  cummingsj@gmail.com
    |    \   \   _(")
     \   /-| ||'--'  Rules give me wings!
      \_\  \_\\
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Checking latest MD5 for snortrules-snapshot-2960.tar.gz....
Rules tarball download of snortrules-snapshot-2960.tar.gz....
	They Match
	Done!
Checking latest MD5 for community-rules.tar.gz....
	They Match
	Done!
IP Blacklist download of http://labs.snort.org/feeds/ip-filter.blf....
Reading IP List...
Prepping rules from snortrules-snapshot-2960.tar.gz for work....
	Done!
Prepping rules from community-rules.tar.gz for work....
	Done!
Reading rules...
Writing Blacklist File /usr/local/snort/etc/rules/iplists/default.blacklist....
Writing Blacklist Version 946091316 to /usr/local/snort/etc/rules/iplistsIPRVersion.dat....
Use of uninitialized value $bin in -f at /usr/local/pp/bin/pulledpork.pl line 986.
Setting Flowbit State....
	Enabled 32 flowbits
	Done
Writing /usr/local/snort/etc/rules/snort.rules....
	Done
Generating sid-msg.map....
	Done
Writing v1 /usr/local/snort/etc/sid-msg.map....
	Done
Writing /usr/local/snort/var/log/sid_changes.log....
	Done
Rule Stats...
	New:-------20635
	Deleted:---0
	Enabled Rules:----4854
	Dropped Rules:----0
	Disabled Rules:---15780
	Total Rules:------20634
IP Blacklist Stats...
	Total IPs:-----2474

Done
Please review /usr/local/snort/var/log/sid_changes.log for additional details
Fly Piggy Fly!
===

### check the snort configuration
sudo /usr/local/snort/bin/snort -c /usr/local/snort/etc/snort.conf -T
# at the end should see this
Running in Test mode

        --== Initializing Snort ==--
Initializing Output Plugins!
Initializing Preprocessors!
Initializing Plug-ins!
Parsing Rules file "/usr/local/snort/etc/snort.conf"

Snort successfully validated the configuration!
Snort exiting

### let's add the community rules
elatov@kerch:~$echo "include \$RULE_PATH/snort.rules" >> /usr/local/snort/etc/snort.conf
# Then create the database for snort/snorby
elatov@kerch:~$mysql -u root -p
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 53935
Server version: 5.5.35-0+wheezy1 (Debian)

Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> create database snort;
Query OK, 1 row affected (0.01 sec)

mysql> grant CREATE, INSERT, SELECT, DELETE, UPDATE on snort.* to snort@localhost identified by 'sn0rt';
Query OK, 0 rows affected (0.03 sec)

mysql> grant ALL on snort.* to snorby@localhost identified by 'sn0rt';
Query OK, 0 rows affected (0.00 sec)

mysql> exit

### Let's get the rules with pulled-pork
# first let's install the pre-requisites
sudo apt-get install  libcrypt-ssleay-perl liblwp-protocol-https-perl
# then get the source
svn checkout http://pulledpork.googlecode.com/svn/trunk/ pulledpork-read-only
mkdir /usr/local/pp
sudo chown elatov:elatov /usr/local/pp
mkdir /usr/local/pp/etc
mkdir /usr/local/pp/bin
# now let's copy the necessary files
rsync -avzP pulledpork-read-only/etc/.  /usr/local/pp/etc/.
rsync -avzP pulledpork-read-only/pulledpork.pl /usr/local/pp/bin/.
# now let's modify the configuration
## here is the configurations I ended up with
elatov@kerch:~$grep -Ev '^$|^#' /usr/local/pp/etc/pulledpork.conf
rule_url=https://www.snort.org/reg-rules/|snortrules-snapshot.tar.gz|46b1a77f08ffe026dff9485a756e9306fce301ba
rule_url=https://s3.amazonaws.com/snort-org/www/rules/community/|community-rules.tar.gz|Community
rule_url=http://labs.snort.org/feeds/ip-filter.blf|IPBLACKLIST|46b1a77f08ffe026dff9485a756e9306fce301ba
ignore=deleted.rules,experimental.rules,local.rules
temp_path=/tmp
rule_path=/usr/local/snort/etc/rules/snort.rules
local_rules=/usr/local/snort/etc/rules/local.rules
sid_msg=/usr/local/snort/etc/sid-msg.map
sid_msg_version=1
sid_changelog=/usr/local/snort/var/log/sid_changes.log
sorule_path=/usr/local/snort/lib/snort_dynamicrules
snort_path=/usr/local/snort/bin/snort
config_path=/usr/local/snort/etc/snort.conf
distro=Debian-6-0
black_list=/usr/local/snort/etc/rules/iplists/default.blacklist
IPRVersion=/usr/local/snort/etc/rules/iplists
version=0.7.0
===
# now try to get the rules
elatov@kerch:~$/usr/local/pp/bin/pulledpork.pl -c /usr/local/pp/etc/pulledpork.conf -T -l

    http://code.google.com/p/pulledpork/
      _____ ____
     `----,\    )
      `--==\\  /    PulledPork v0.7.0 - Swine Flu!
       `--==\\/
     .-~~~~-.Y|\\_  Copyright (C) 2009-2013 JJ Cummings
  @_/        /  66\_  cummingsj@gmail.com
    |    \   \   _(")
     \   /-| ||'--'  Rules give me wings!
      \_\  \_\\
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Checking latest MD5 for snortrules-snapshot-2960.tar.gz....
Rules tarball download of snortrules-snapshot-2960.tar.gz....
	They Match
	Done!
Checking latest MD5 for community-rules.tar.gz....
	They Match
	Done!
IP Blacklist download of http://labs.snort.org/feeds/ip-filter.blf....
Reading IP List...
Prepping rules from snortrules-snapshot-2960.tar.gz for work....
	Done!
Prepping rules from community-rules.tar.gz for work....
	Done!
Reading rules...
Writing Blacklist File /usr/local/snort/etc/rules/iplists/default.blacklist....
Writing Blacklist Version 946091316 to /usr/local/snort/etc/rules/iplistsIPRVersion.dat....
Use of uninitialized value $bin in -f at /usr/local/pp/bin/pulledpork.pl line 986.
Setting Flowbit State....
	Enabled 32 flowbits
	Done
Writing /usr/local/snort/etc/rules/snort.rules....
	Done
Generating sid-msg.map....
	Done
Writing v1 /usr/local/snort/etc/sid-msg.map....
	Done
Writing /usr/local/snort/var/log/sid_changes.log....
	Done
Rule Stats...
	New:-------20635
	Deleted:---0
	Enabled Rules:----4854
	Dropped Rules:----0
	Disabled Rules:---15780
	Total Rules:------20634
IP Blacklist Stats...
	Total IPs:-----2474

Done
Please review /usr/local/snort/var/log/sid_changes.log for additional details
Fly Piggy Fly!
===

### let's add the community rules
elatov@kerch:~$echo "include \$RULE_PATH/snort.rules" >> /usr/local/snort/etc/snort.conf

### Now let's start snort as a test
sudo /usr/local/snort/bin/snort -A console -q -u snort -g snort -c /usr/local/snort/etc/snort.conf -i eth0
# you should see something like this
4/01-16:17:24.811261  [**] [129:12:1] Consecutive TCP small segments exceeding threshold [**] [Classification: Potentially Bad Traffic] [Priority: 2] {TCP} 216.98.195.98:50932 -> 67.172.135.80:4172
# to start it and run it in the background run the following
sudo /usr/local/snort/bin/snort -q -u snort -g snort -c /usr/local/snort/etc/snort.conf -i eth0 &
###

### let's setup barnyard2
# let's get the pre-reqs
apt-get install libpcap-dev libmysqld-dev
# first get the source
elatov@kerch:/opt/work$wget http://www.securixlive.com/download/barnyard2/barnyard2-1.9.tar.gz
--2014-03-31 14:40:58--  http://www.securixlive.com/download/barnyard2/barnyard2-1.9.tar.gz
Resolving www.securixlive.com (www.securixlive.com)... 180.148.100.6
Connecting to www.securixlive.com (www.securixlive.com)|180.148.100.6|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 652879 (638K) [application/x-gzip]
Saving to: `barnyard2-1.9.tar.gz'

100%[======================================>] 652,879      266K/s   in 2.4s    

2014-03-31 14:41:02 (266 KB/s) - `barnyard2-1.9.tar.gz' saved [652879/652879]
##
# let's extract the source:
elatov@kerch:/opt/work$tar xvzf barnyard2-1.9.tar.gz
# now let's prepare the source:
./configure --with-mysql --prefix=/usr/local/by --with-mysql-libraries=/usr/lib/x86_64-linux-gnu
# build the package
make
# and lastly install the package
sudo mkdir /usr/local/by
sudo chown elatov:elatov /usr/local/by/
make install
# here are the files installed
elatov@kerch:~$tree /usr/local/by
/usr/local/by
├── bin
│   └── barnyard2
└── etc
    └── barnyard2.conf

2 directories, 2 files
# let's configure it to store to the database
elatov@kerch:~$grep -Ev '^$|^#' /usr/local/by/etc/barnyard2.conf
config reference_file:	    /usr/local/snort/etc/reference.config
config classification_file: /usr/local/snort/etc/classification.config
config gen_file:            /usr/local/snort/etc/gen-msg.map
config sid_file:	    /usr/local/snort/etc/sid-msg.map
config logdir: /usr/local/snort/var/log
config hostname:	kerch
config interface:	eth0
config daemon
config waldo_file: /usr/local/snort/var/log/barnyard2.waldo
input unified2
output alert_fast: stdout
output database: log, mysql, user=snorby password=sn0rt dbname=snorby host=localhost
## let's start the
sudo chown -R snort:snort /usr/local/by/
sudo touch /usr/local/snort/var/log/barnyard2.waldo
sudo chown snort:snort /usr/local/snort/var/log/barnyard2.waldo
# test it out
sudo /usr/local/by/bin/barnyard2 -c /usr/local/by/etc/barnyard2.conf -d /usr/local/snort/var/log/ -f merged.log -w /usr/local/snort/var/log/barnyard2.waldo -v


### Now let's install snorby
# first let's install all the pre-requisites

apt-get install libyaml-dev git-core default-jre imagemagick libmagickwand-dev
wkhtmltopdf build-essential libssl-dev libreadline-gplv2-dev zlib1g-dev
linux-headers-amd64 libsqlite3-dev libxslt1-dev libxml2-dev libmysqlclient-dev
libmysql++-dev apache2-prefork-dev libcurl4-openssl-dev ruby ruby-dev

# now let's install bundler and rails
sudo gem install bundler rails
# then let's install rake
elatov@kerch:~$sudo gem install rake --version=0.9.2
Fetching: rake-0.9.2.gem (100%)
Successfully installed rake-0.9.2
1 gem installed
Installing ri documentation for rake-0.9.2...
Installing RDoc documentation for rake-0.9.2...
# now let's get the source
elatov@kerch:~$git clone http://github.com/Snorby/snorby.git
Cloning into 'snorby'...
remote: Reusing existing pack: 10471, done.
remote: Total 10471 (delta 0), reused 0 (delta 0)
Receiving objects: 100% (10471/10471), 9.91 MiB | 413 KiB/s, done.
Resolving deltas: 100% (4764/4764), done.
# let's update the config, first let's update the database location
cp snorby/config/database.yml.example snorby/config/database.yml
# then modify the following:
snorby: &snorby
  adapter: mysql
  username: snorby
  password: "sn0rt"
  host: localhost
# now let's do the snorby config
cp snorby/config/snorby_config.yml.example snorby/config/snorby_config.yml
---
production:
  domain: 'demo.snorby.org'
  wkhtmltopdf: /usr/bin/wkhtmltopdf
  ssl: false
  mailer_sender: 'snorby@snorby.org'
  geoip_uri: "http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz"
  rules:
    - ""
  authentication_mode: database
  time_zone: 'US/Mountain'
---
# now let's configure the mail
vi snorby/config/initializers/mail_config.rb
===
 ActionMailer::Base.delivery_method = :sendmail
 ActionMailer::Base.sendmail_settings = {
   :location => '/usr/sbin/sendmail',
   :arguments => '-i -t'
 }

ActionMailer::Base.perform_deliveries = true
ActionMailer::Base.raise_delivery_errors = true
===
# now install the dependencies
bundle install
# now let's setup snorby
elatov@kerch:~/snorby$bundle exec rake snorby:setup
No time_zone specified in snorby_config.yml; detected time_zone: US/Mountain
5ff841ca217da8aabcebad4b2762f6b6f6d4a531219ea694873f9589f2ad39574c1ab9ecf7738b9922d34479addc3d5958b37ce04f20422359bef099630d8307
ERROR 1007 (HY000) at line 1: Can't create database 'snorby'; database exists
[datamapper] Finished auto_upgrade! for :default repository 'snorby'
[~] Adding `index_timestamp_cid_sid` index to the event table
[~] Adding `index_caches_ran_at` index to the caches table
[~] Adding `id` to the event table
[~] Building `aggregated_events` database view
[~] Building `events_with_join` database view
* Removing old jobs
* Starting the Snorby worker process.
* Adding jobs to the queue
# now let's start it
bundle exec rails server -e production -b 127.0.0.1
elatov@kerch:~/snorby$bundle exec rails server -e production -b 127.0.0.1
No time_zone specified in snorby_config.yml; detected time_zone: US/Mountain
=> Booting WEBrick
=> Rails 3.1.12 application starting in production on http://127.0.0.1:3000
=> Call with -d to detach
=> Ctrl-C to shutdown server
[2014-03-31 16:04:30] INFO  WEBrick 1.3.1
[2014-03-31 16:04:30] INFO  ruby 1.9.3 (2012-04-20) [x86_64-linux]
[2014-03-31 16:04:30] INFO  WEBrick::HTTPServer#start: pid=28708 port=3000
# then go to
http://localhost:3000
# and enter the following creds
snorby@snorby.org
snorby
# At this point there won't be any events
# so let's configure barnyard2 to process the output files and store the
# results in a mysql db
# here is what I added into the config
elatov@kerch:~$grep -Ev '^$|^#' /usr/local/by/etc/barnyard2.conf
config reference_file:	    /usr/local/snort/etc/reference.config
config classification_file: /usr/local/snort/etc/classification.config
config gen_file:            /usr/local/snort/etc/gen-msg.map
config sid_file:	    /usr/local/snort/etc/sid-msg.map
config logdir: /usr/local/snort/var/log
config hostname:	kerch
config interface:	eth0
config daemon
config waldo_file: /usr/local/snort/var/log/barnyard2.waldo
input unified2
output alert_fast: stdout
output database: log, mysql, user=snorby password=sn0rt dbname=snorby host=localhost
# now start it

### configure the start up script
sudo cp /opt/work/snort-2.9.6.0/rpm/snortd /etc/init.d/.
# then edit the file
sudo vi /etc/init.d/snortd
===
### BEGIN INIT INFO
# Provides: snortd
# Required-Start: $remote_fs $syslog mysql
# Required-Stop: $remote_fs $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# X-Interactive: true
# Short-Description: Start Snort
### END INIT INFO#
#. /etc/rc.d/init.d/functions
. /etc/default/snort
CONF="-c /usr/local/snort/etc/snort.conf"
LOGDIR=/usr/local/snort/var/log
/usr/local/snort/bin/snort $ALERTMODE $BINARY_LOG $NO_PACKET_LOG $DUMP_APP -D $PRINT_INTERFACE -i $i -u $USER -g $GROUP $CONF -l $LOGDIR/$i $PASS_FIRST $BPFFILE $BPF
/usr/local/bin/snort $ALERTMODE $BINARY_LOG $NO_PACKET_LOG $DUMP_APP -D $PRINT_INTERFACE -i $i -u $USER -g $GROUP $CONF -l $LOGDIR/$i $PASS_FIRST $BPFFILE $BPF
/usr/local/bin/snort $ALERTMODE $BINARY_LOG $NO_PACKET_LOG $DUMP_APP -D $PRINT_INTERFACE $INTERFACE -u $USER -g $GROUP $CONF -l $LOGDIR $PASS_FIRST $BPFFILE $BPF
touch /var/lock/snort/snort
rm -f /var/lock/snort/snort
kill `pidof snort`
if [ ! -x "/bin/pidof" ]; then
[ -e /var/lock/snort/snort ] && $0 restart
===

# then copy the config file
elatov@kerch:~$sudo cp /opt/work/snort-2.9.6.0/rpm/snort.sysconfig /etc/default/snort
# now let's edit that
vi /etc/default/snort
===
ALERTMODE=
CONF=/usr/local/snort/etc/snort.conf
LOGDIR=/usr/local/snort/var/log
===
# let's make it executable
chmod +x /etc/init.d/snortd
# lastly let's enabled the service
elatov@kerch:/etc$sudo update-rc.d snortd defaults
update-rc.d: using dependency based boot sequencing

# let's enable the service for barnyard
# first copy the init script
sudo cp /opt/work/barnyard2-1.9/rpm/barnyard2 /etc/init.d/.
# then copy the config
sudo cp /opt/work/barnyard2-1.9/rpm/barnyard2.config /etc/default/barnyard2
# now let's edit the init script
sudo vi /etc/init.d/barnyard2
===
### BEGIN INIT INFO
# Provides: barnyard2
# Required-Start: $remote_fs $syslog
# Required-Stop: $remote_fs $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# X-Interactive: true
# Short-Description: Start Barnyard
### END INIT INFO#
#source /etc/rc.d/init.d/functions
#source /etc/sysconfig/network
[ -x /usr/local/snort/bin/snort ] || exit 1
[ -r /usr/local/snort/etc/snort.conf ] || exit 1
SYSCONFIG="/etc/default/barnyard2"
PIDFILE="/var/lock/barnyard/barnyard2-$INT.pid"
ARCHIVEDIR="$SNORTDIR/archive"
WALDO_FILE="$SNORTDIR/barnyard2.waldo"
BARNYARD_OPTS="-D -c $CONF -d $SNORTDIR -w $WALDO_FILE -L $SNORTDIR -a $ARCHIVEDIR -f $LOG_FILE -X $PIDFILE $EXTRA_ARGS"
/usr/local/by/bin/barnyard2 $BARNYARD_OPTS
[ $RETVAL -eq 0 ] && touch /var/lock/barnyard/$prog
kill `pidof bardnyard2`
[ $RETVAL -eq 0 ] && rm -f /var/lock/barnyard/$prog
kill -HUP `pidof bardnyard2`
[ -e /var/lock/barnyard/$prog ] && restart
===
# now let's configure the settings
sudo vi /etc/default/barnyard2
===
LOG_FILE="merged.log"
SNORTDIR="/usr/local/snort/var/log"
CONF=/usr/local/by/etc/barnyard2.conf
EXTRA_ARGS="-u snort -g snort"
===
# now let's enable the service
latov@kerch:~$sudo chmod +x /etc/init.d/barnyard2
elatov@kerch:~$sudo update-rc.d barnyard2 defaults
update-rc.d: using dependency based boot sequencing
# then start both services
sudo service snortd start
sudo service barnyard2 start
###


### Fix the "stream5 tcp small segment threshold"
sudo vi /usr/local/snort/etc/rules/local.rules
===
suppress gen_id 129, sig_id 12, track by_src, ip 192.168.1.100
suppress gen_id 129, sig_id 12, track by_src, ip 192.168.1.101
suppress gen_id 129, sig_id 12, track by_src, ip 192.168.1.104
suppress gen_id 129, sig_id 12, track by_src, ip 192.168.1.107
suppress gen_id 129, sig_id 12, track by_src, ip 10.0.0.3
suppress gen_id 129, sig_id 12, track by_src, ip 162.248.164.86
===
# fix the "stream5 reset outside window"
sudo vi /usr/local/snort/etc/rules/local.rules
===
suppress gen_id 129 ,sig_id 15
===
# fix the "ssh: Protocol mismatch"
sudo vi /usr/local/snort/etc/rules/local.rules
===
suppress gen_id 128, sig_id 4, track by_dst, ip 10.0.0.2
===
# fix the "sensitive_data threshold exceeded"
sudo vi /usr/local/snort/etc/snort.conf
===
preprocessor sensitive_data: alert_threshold 500 
===
# fix the http_inspect: UNKNOWN METHOD"
sudo vi /usr/local/snort/etc/rules/local.rules
===
suppress gen_id 119 ,sig_id 31
===
# fix the dnp3: DNP3 Link-Layer Frame was dropped. 
sudo vi /usr/local/snort/etc/snort.conf
===
#preprocessor dnp3: ports { 20000 } \
#   memcap 262144 \
#   check_crc
===
# then finally restart snort to apply the changes
sudo service snortd restart
# make sure the performance is okay, force a dump of the stats
$sudo kill -USR1 19354
# then check out the logs under /var/log/snort.log and you should see smthg 
Packet I/O Totals:
    Received:     12556909
    Analyzed:     12556903 (100.000%)
    Dropped:            0 (  0.000%)
    Filtered:            0 (  0.000%)
    Outstanding:            6 (  0.000%)
    Injected:            0
###

### Enable Emerging threat rules
# first edit the configuration file
vi /usr/local/pp/etc/pulledpork.conf
===
rule_url=https://rules.emergingthreatspro.com/|emerging.rules.tar.gz|open
===
# get the config for emrg theats
elatov@kerch:~$wget http://rules.emergingthreats.net/open/snort-2.9.0/emerging.conf
# then put under the snort install
elatov@kerch:~$sudo cp emerging.conf /usr/local/snort/etc/.
# then include it in the snort config
include emerging.conf
# then get the new rules
sudo su - snort -c "/usr/local/pp/bin/pulledpork.pl -c /usr/local/pp/etc/pulledpork.conf -l"
# then make sure the snort configuration is okay
sudo service snortd config-check
# then lastly restart the service
sudo service snortd restart
###

### The alerts are all going to /usr/local/snort/var/log in unified format
# but for daemon related logs it's still going to syslog, so let's put those
# in a separate file
elatov@kerch:~$cat /etc/rsyslog.d/snort.conf
if $programname == 'snort' then /var/log/snort.log
& ~
elatov@kerch:~$cat /etc/rsyslog.d/by.conf
if $programname == 'barnyard2' then /var/log/barnyard.log
& ~
# to apply the change, restart rsyslog
sudo service rsyslog restart
###

### here is the log rotate
elatov@kerch:~$cat /etc/logrotate.d/snort 
/var/log/snort.log {
    daily
    rotate 7
    compress
    missingok
    notifempty
    create 0640 snort snort
    sharedscripts
    postrotate
        if [ -x /usr/sbin/invoke-rc.d ]; then \
            invoke-rc.d snortd restart > /dev/null; \
        else \
            /etc/init.d/snortd restart > /dev/null; \
        fi; 
    endscript
}
tov@kerch:~$cat /etc/logrotate.d/barnyard2 
/var/log/barnyard2.log {
    daily
    rotate 7
    compress
    missingok
    notifempty
    create 0640 snort snort
    sharedscripts
    postrotate
        if [ -x /usr/sbin/invoke-rc.d ]; then \
            invoke-rc.d barnyard2 restart > /dev/null; \
        else \
            /etc/init.d/barnyard2 restart > /dev/null; \
        fi; 
    endscript
}
###

### Fix the pulled pork normalization messages
An error occurred: WARNING: ip4 normalizations disabled because not inline.
An error occurred: WARNING: tcp normalizations disabled because not inline.
An error occurred: WARNING: icmp4 normalizations disabled because not inline.
# disable the normzalizations on snort, since we are only IDS
sudo vi /usr/local/snort/etc/snort.conf
---
#preprocessor normalize_ip4
#preprocessor normalize_tcp: ips ecn stream
#preprocessor normalize_icmp4
#preprocessor normalize_ip6
#preprocessor normalize_icmp6
---
###
